"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chatcompletionrequestbody import (
    ChatCompletionRequestBody,
    ChatCompletionRequestBodyTypedDict,
)
from .chatcompletionresult import ChatCompletionResult, ChatCompletionResultTypedDict
from .streamedchatcompletionresult import (
    StreamedChatCompletionResult,
    StreamedChatCompletionResultTypedDict,
)
from friendli.types import BaseModel
from friendli.utils import FieldMetadata, HeaderMetadata, RequestMetadata
import pydantic
from typing import AsyncGenerator, Generator, Optional, Union
from typing_extensions import Annotated, NotRequired, TypedDict


class ChatCompletionRequestTypedDict(TypedDict):
    x_friendli_team: NotRequired[str]
    r"""ID of team to run requests as (optional parameter)."""
    chat_completion_request_body: NotRequired[ChatCompletionRequestBodyTypedDict]


class ChatCompletionRequest(BaseModel):
    x_friendli_team: Annotated[
        Optional[str],
        pydantic.Field(alias="X-Friendli-Team"),
        FieldMetadata(header=HeaderMetadata(style="simple", explode=False)),
    ] = None
    r"""ID of team to run requests as (optional parameter)."""

    chat_completion_request_body: Annotated[
        Optional[ChatCompletionRequestBody],
        FieldMetadata(request=RequestMetadata(media_type="application/json")),
    ] = None


ChatCompletionResponseTypedDict = Union[
    ChatCompletionResultTypedDict,
    Union[
        Generator[StreamedChatCompletionResultTypedDict, None, None],
        AsyncGenerator[StreamedChatCompletionResultTypedDict, None],
    ],
]


ChatCompletionResponse = Union[
    ChatCompletionResult,
    Union[
        Generator[StreamedChatCompletionResult, None, None],
        AsyncGenerator[StreamedChatCompletionResult, None],
    ],
]
